apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mychart.fullname" . }}
  labels:
    app: {{ include "mychart.name" . }}
    chart: {{ include "mychart.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    appName: "{{ .Values.appName }}"
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: {{ .Values.deployment.strategy.type }}
    rollingUpdate:
      maxUnavailable: {{ .Values.deployment.strategy.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.deployment.strategy.rollingUpdate.maxSurge }}
  selector:
    matchLabels:
      app: {{ include "mychart.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        app: {{ include "mychart.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ include "mychart.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: 8080
            - containerPort: 8081
            - containerPort: 8082
          livenessProbe:
            tcpSocket:
              port: {{ .Values.livenessProbe.tcpSocket.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.readinessProbe.tcpSocket.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          args: {{ toYaml .Values.args }}
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
          volumeMounts:
            - name: config-volume
              mountPath: /app/config.json
              subPath: config.json
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "mychart.fullname" . }}-configmap
      terminationGracePeriodSeconds: 60
      lifecycle:
        preStop:
          exec:
            command: ["wget", "http://localhost:8080/service/shutdown"]
